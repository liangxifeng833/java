<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    <!-- Spring与Hibernate整合 -->
    
    <context:component-scan base-package="lxf.spring.hibernate"></context:component-scan>
    <!-- 配置数据源 -->
     <!-- 导入属性文件 classpath代表类路径 -->
    <context:property-placeholder location="classpath:db.properties"/> 
    <!--  配置c3p0数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
       <!-- 使用外部属性文件的属性 -->
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        
        <property name="initialPoolSize" value="${jdbc.initPoolSize}"></property>
        <property name="maxPoolSize"  value="${jdbc.maxPoolSize}"></property>
    </bean>
    
    <!-- 配置Hibernate的SessionFactory实例 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
             <!-- 配置数据源属性 -->
            <property name="dataSource" ref="dataSource"></property>
            <!-- 配置Hibernate 配置文件的位置及名称
            <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>-->
            <!-- hibernate配置文件的内容也可以作为Spring的属性配置 -->
            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                    <prop key="hibernate.show_sql">true</prop>
                    <prop key="hibernate.format_sql">true</prop>
                    <prop key="hibernate.hbm2ddl.auto">true</prop>
                </props>
            </property>
            <!-- 配置 Hibernate映射文件的位置以及名称，可以使用通配符-->
            <property name="mappingLocations" value="classpath:lxf/spring/hibernate/entiries/*.hbm.xml"></property>
    </bean>
    
    <!-- 配置Spring的声明式事务 -->
    <!-- １．配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
            <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- ２．配置事务属性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
            <tx:attributes>
                <tx:method name="get*" read-only="true"/>
                <tx:method name="*" />
            </tx:attributes>
    </tx:advice>
    <!-- ３．配置事务切点，并把切点和事务属性关联 -->
    <aop:config>
        <!-- 配置切入点 -->
        <aop:pointcut expression="execution( * lxf.spring.hibernate.service.impl.*.*(..))" id="txPointCut"/>
        <!-- 将切入点和属性关联 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>
</beans>
